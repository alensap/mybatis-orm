#summary MyBatis ORM Annotations

= `@Table` =
{{{
@Table(value)
}}}

|| Elements || Description || Type || Default || Database ||
|| value  || table name || String || "" || All ||

value가 없을 때, AnnotationNotFoundException이 발생한다.

= `@Column` =
{{{
@Column(value)
@Column(name=<>, primaryKey=<>, autoIncrement=<>, sequence=<>)
}}}

|| Elements || Description || Type || Default || Database ||
|| value  || column name || String || "" || All ||
|| name  || column name || String || "" || All ||
|| primaryKey || primark key or not || boolean || false || All ||
|| autoIncrement || auto increment or not || boolean || false || MySql ||
|| sequence || sequence name || String || "" || Oracle ||

value나 name에 의해 컬럼명이 지정되지 않으면, 필드명을 컬럼명으로 사용한다.

MySQL에서 autoIncrement 가 true이면, 데이터를 insert한 다음, 자동으로 autoIncrement 컬럼의 생성값이 해당 field에 저정된다. 마찬가지로, Oracle에서 시퀀스명을 설정한 경우, 시퀀스값을 가져와서 해당 field에 저장하고, insert를 수행한다.

= `@ColumnNaming` =

{{{
@ColumnNaming(value)
}}}

클래스의 필드에 선언된 @Column annontation 의 value 또는 name 을 지정하지 않고, 동일 규칙에 의해 필드명을 컬럼명으로 변환하기 위한 annotation 이다.

|| Elements || Description || Type || Default || Database ||
|| value  || column naming rule || NamingRule || NamingRule.NONE || All ||

자세한 것은 ColumnNamingAnnotation 을 참고하기 바란다.

*Since:* 0.3 (예정)


= Example =
For MySQL,
{{{
@Table(“hospital”)
Public class Hospital {
	@Column(primaryKey=true, autoIncrement=true) private Integer hospitalid;
	@Column private String name;
	@Column("night_check") private Integer nightCheck;
	@Column(name=“regdttm”) private Date regdttm;
}
}}}

For Oracle,
{{{
@Table(“hospital”)
Public class Hospital {
	@Column(primaryKey=true, sequence="hospitalid_seq") private Integer hospitalid;
	@Column private String name;
	@Column("night_check") private Integer nightCheck;
	@Column(name=“regdttm”) private Date regdttm;
}
}}}

= 주의 사항 =
 * *<font color="red">필드 타입은 primitive type(int, long, boolean, float, double) 대신, wrapper class(Integer, Long, Boolean, Float, Double)을 사용해야 한다.</font>*