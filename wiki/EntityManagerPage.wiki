== `<T>` Page`<T>` page(T parameter, int pageNumber, int rows) ==

parameter의 null이 아닌 field에 대해 where 절을 생성하여 select 하여 Page를 리턴한다. Page 객체에는 parameter와 동일한 타입의 객체 List가 있다.

pageNumber는 현재의 페이지 번호이며, rows는 한 페이지에 포함되는 객체의 수이다.

예)
{{{
Hospital hospital = new Hospital();
hospital.setHospitalid(1234);
hospital.setNightCheck(1);
Page<Hospital> page = entityManager.page(hospital,2,10);
int count = page.getCount();
for (Hospital h : page.getList()) {
    System.out.println(h.getName());
}
int lastPage = page.getLast();
}}}

생성되는 MyBatis statement
<code language="sql">
/* MySql */
SELECT *
FROM hospital
WHERE hosptailid = #{hospitalid} AND night_check = #{nightCheck}
LIMIT 10, 10

/* Oracle */
SELECT *
FROM (
    SELECT *, ROWNUM rnum
    FROM hospital
    WHERE hosptailid = #{hospitalid} AND night_check = #{nightCheck}
        AND ROWNUM <= 20
)
WHERE rnum >= 11

</code>


== `<T>` Page`<T>` page(T parameter, String orderBy, int pageNumber, int rows) ==
== `<T>` Page`<T>` page(T parameter, String condition, String orderBy, int pageNumber, int rows) ==
== `<T>` Page`<T>` page(T parameter, Condition condition, String orderBy, int pageNumber, int rows) ==